/*
    dFSM Language
*/

dFlow:
    (
    'entities'
        entities*=TrainableEntity
    'end'
    )?
    (
    'synonyms'
        synonyms*=Synonym
    'end'
    )?
    (
    'intents'
        intents*=Intent
    'end'
    )?
;

// ENTITIY
Entity: PredefinedEntity | TrainableEntity;

TrainableEntity:
    'Entity' name=ID
        words+=Word[',']
    'end'
;

PredefinedEntity:
    'PERSON'        |
    'NORP'          |
    'FAC'           |
    'ORG'           |
    'GPE'           |
    'LOC'           |
    'PRODUCT'       |
    'EVENT'         |
    'WORK_OF_ART'   |
    'LAW'           |
    'LANGUAGE'      |
    'DATE'          |
    'TIME'          |
    'PERCENT'       |
    'MONEY'         |
    'QUANTITY'      |
    'ORDINAL'       |
    'CARDINAL'
;

// ----------------------------------------------------------------------

Synonym:
    'Synonym' name=ID
        words+=Word[',']
    'end'
;

// INTENT
Intent:
    'Intent' name=ID
        phrases*=IntentPhraseComplex[',']
    'end'
;

IntentPhraseComplex: (IntentPhrase)*;

IntentPhrase:
    (p1?=STRING ('{' entityRef1=[TrainableEntity|FQN] '}')?)#
;

Phrase:
    words*=Word
;

// ----------------------------------------------------------------------

// EVENTS -------------------------------------------------------------->
/* Event: IntentEvent; */
/**/
/* IntentEvent: */
/*     'IntentEvent' '(' intent=STRING ')' name=ID */
/* ; */
// ----------------------------------------------------------------------

/* ActiveFormParameter: */
/*     name=ID ':' type=ParameterType '=' source=ParameterSource */
/* ; */
/**/
/* ParameterSource: HRIParamResource; */
/**/
/* HRIParamResource: */
/*     'HRI' '(' ask_slot=STRING ')' */
/* ; */
/**/
/* ParameterType: 'int' | 'float' | 'str' | 'bool'; */
/* ParameterDefault: STRING | INT | FLOAT | BOOL; */
/**/

// ACTIONS ------------------------------------------------------------->

/* Action: SpeakAction | FireEventAction; */
/**/
/* SpeakAction: */
/*     'Speak' '(' text=STRING ')' */
/* ; */
/**/
/* FireEventAction: */
/*     'FireEvent' '(' msg=STRING ')' */
/* ; */
/**/
/* RESTCallAction: */
/*     'RESTCall' '(' */
/*         host=STRING ',' */
/*         port=INT ',' */
/*         path=STRING ',' */
/*         '[' query_params=STRING[','] ']' ',' */
/*         '[' path_params=STRING[','] ']' ',' */
/*         '[' body_params=STRING[','] ']' ',' */
/*     ')' */
/* ; */

// ----------------------------------------------------------------------
Word:
    /[-\w]*\b/
;


TextType:
  STRING|/\w*\b/
;

// === Fully Qualified Names Rule ===
FQN: ID('.'ID)*;

// special rule for comments.
Comment:
    /\/\/.*$/
;
